Metadata-Version: 1.0
Name: mfapy
Version: 0.6.0
Summary: Python package for 13C Metabolic flux analysis
Home-page: https://github.com/fumiomatsuda/mfapy
Author: Fumio Matsuda
Author-email: fmatsuda@osaka-u.ac.jp
License: MIT License

Copyright (c) 2018 Fumio Matsuda

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
Description: mfapy: A Python toolbox for 13C-metabolic flux analysis
        ================================================

        mfapy is a Python toolbox for 13C-metabolic flux analysis developed by Matsuda and Shimizu lab group in Osaka university, Japan.
        mfapy supports:

        1. The elementary metabolite unit (EMU) framework developed by Antoniewicz et al 2007.
        2. Isotopically nonstationary 13C metabolic flux analysis (INST-MFA)
        3. Parallel labeling experiment without limitation of number of experiments.
        4. Metabolic flux, net metabolic flux of reversible reaction, and metabolite concentration could be considered as fitting parameters.
        5. G-value by introducing the "pseudo" reaction
        6. Goodness-of-fit analysis
        7. Parallel performing non-linear optimization jobs using joblib package.
        8. Automated model construction from model description file

        Documentation
        ----------------------------------------
        Please check 'mfapy-document' repository. https://fumiomatsuda.github.io/mfapy-document/

        License
        ----------------------------------------
        This software is released under the MIT License, see LICENSE.txt.

        Requirement
        ----------------------------------------
        Python 3.6

        mfapy requires the packages:

        NumPy and SciPy (van der Walt, Colbert & Varoquaux, 2011)

        nlopt https://nlopt.readthedocs.io/en/latest/

        joblib

        mkl-service

        mfapy was developed and tested using the PyScripter IDE, and was tested in 64 bit version of Anaconda3 distribution in Windows 10.


        Install
        ----------------------------------------
        1. Install 64 bit version of Anaconda3
        2. Create virtual environment such as named "mfapy" and install required packages
        ~~~
            > conda create -n mfapy python=3.6 numpy scipy matplotlib=2.1 joblib
            > conda activate mfapy
            > conda install -c conda-forge nlopt
            > conda install -c anaconda mkl-service
        ~~~

        2. Install mfapy
        Unzip and set as current folder
        ~~~
            > python setup.py install
        ~~~

        Test
        ----------------------------------------
        ~~~
            > python setup.py test
        ~~~

        How to use
        ----------------------------------------
        Sample python code in 'Explanation_1_13CMFA_toymodel.py' explains how to use mfapy.
        Detailed explanations are available from docstrings
        Example python codes are also available.

        Learn more <https://fumiomatsuda.github.io/mfapy-document/>

        ---------------

        If you want to learn more about ``setup.py`` files, check out `this repository <https://github.com/fumiomatsuda/mfapy>




Platform: Windows
Platform: Linux
Platform: Unix
