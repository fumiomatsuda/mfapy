Metadata-Versi3on: 1.0
Name: mfapy
Version: 0.6.2
Summary: Python package for 13C Metabolic flux analysis
Home-page: https://github.com/fumiomatsuda/mfapy
Author: Fumio Matsuda
Author-email: fmatsuda@osaka-u.ac.jp
License: MIT License

Copyright (c) 2018 Fumio Matsuda

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
Description: mfapy: A Python toolbox for 13C-metabolic flux analysis
        ================================================

        mfapy is a Python toolbox for 13C-metabolic flux analysis developed by Matsuda and Shimizu lab group in Osaka university, Japan.
        mfapy supports:

        1. The elementary metabolite unit (EMU) framework developed by Antoniewicz et al 2007.
        2. Isotopically nonstationary 13C metabolic flux analysis (INST-MFA)
        3. Parallel labeling experiment without limitation of number of experiments.
        4. Metabolic flux, net metabolic flux of reversible reaction, and metabolite concentration could be considered as fitting parameters.
        5. G-value by introducing the "pseudo" reaction
        6. Goodness-of-fit analysis
        7. Parallel performing non-linear optimization jobs using joblib package.
        8. Automated model construction from model description file

        Documentation
        ----------------------------------------
        Please check 'mfapy-document' repository. https://fumiomatsuda.github.io/mfapy-document/

        License
        ----------------------------------------
        This software is released under the MIT License, see LICENSE.txt.

        Requirement
        ----------------------------------------
        Python 3.10 or later

        mfapy requires the packages:

        NumPy and SciPy (van der Walt, Colbert & Varoquaux, 2011)

        nlopt https://nlopt.readthedocs.io/en/latest/

        joblib

        mkl-service (for Anaconda)

        mfapy was developed and tested in 64 bit version of Miniconda and official python + pip distribution in Windows 11.



        Uninstall Anaconda
        ----------------------------------------
        1. Clean up Anaconda files by anaconda-clean module
        ~~~
            >conda install anaconda-clean
            >anaconda-clean
        ~~~
        2-1. If you want to use Miniconda

        Install for Miniconda
        ----------------------------------------
        1. Install 64 bit version of Miniconda
        2. Please use "Anaconda prompt" as a terminal
        3. Create virtual environment such as named "mfapy" and install required packages
        ~~~
            > conda create -n mfapy 
            > conda activate mfapy
            > conda install -c conda-forge numpy scipy joblib nlopt mkl-service
        ~~~
        2-2. If you want to use Official Python environment

        Install for Miniconda
        ----------------------------------------
        1. Install 64 bit version of Python
        2. Please start terminal
        3. Please move to your project folder.
	4. Create virtual environment such as named "mfapy" and install required packages
        ~~~
            > python -m venv mfapy
            > mfapy\Scripts\activate
            > python -m pip install numpy scipy matplotlib nlopt joblib
        ~~~

        2. Install mfapy
        Unzip and set as current folder
        ~~~
            > python -m pip install .
        ~~~

        Test
        ----------------------------------------
        ~~~
            > python -m unittest
        ~~~

        How to use
	----------------------------------------
	./sample/Tutorial 1_13C-MFAEcoli.py explains how to use mfapy for 13C-MFA.

	./sample/Tutorial 2_INST-MFAtoymodel.py explains how to use mfapy for INST-MFA.

	./sample/Tutorial 3_mfapy_functions.py is a advanced exlanation on many mfapy function.


	Detailed explanations are available from docstrings

	In the ./sample folder, example python codes are also available.


        Learn more <https://fumiomatsuda.github.io/mfapy-document/>

        ---------------

        If you want to learn more about ``setup.py`` files, check out `this repository <https://github.com/fumiomatsuda/mfapy>




Platform: Windows
Platform: Linux
Platform: Unix
